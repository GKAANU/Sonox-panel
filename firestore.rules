rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Chats collection
    match /chats/{chatId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/chats/$(chatId)/participants/$(request.auth.uid));
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/chats/$(chatId)/participants/$(request.auth.uid));
    }
    
    // Messages subcollection
    match /chats/{chatId}/messages/{messageId} {
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/chats/$(chatId)/participants/$(request.auth.uid));
      allow create: if request.auth != null && 
        exists(/databases/$(database)/documents/chats/$(chatId)/participants/$(request.auth.uid));
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.senderId;
    }
    
    // Friend requests collection
    match /friendRequests/{requestId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId);
    }
  }
}